{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win7\\\\Desktop\\\\project\\\\client\\\\pages\\\\Board\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Card, Form, Input } from 'antd';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // const { logInDone } = useSelector((state) => state.user);\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector3.addPostDone;\n\n  useCallback(function () {\n    if (addPostDone) {\n      Router.push('/Board');\n    }\n  }, [addPostDone]); // useEffect(() => {\n  //   Router.push('/Board');\n  // }, [logInDone]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"CX8YSYudeVPrHehlrwdzFpfS0Xg=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/win7/Desktop/project/client/pages/Board/Post.js"],"names":["React","useCallback","useEffect","Button","Card","Form","Input","useSelector","Router","PostForm","PostCard","Board","state","user","me","post","mainPosts","addPostDone","push","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,MAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AACf,qBAAeJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR,CADe,CAEf;;;AACA,sBAAsBP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,SAAR,iBAAQA,SAAR;;AACA,sBAAwBT,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAnC;AAAA,MAAQE,WAAR,iBAAQA,WAAR;;AAEAhB,EAAAA,WAAW,CAAC,YAAM;AAChB,QAAIgB,WAAJ,EAAiB;AACfT,MAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ;AACD;AACF,GAJU,EAIR,CAACD,WAAD,CAJQ,CAAX,CANe,CAWf;AACA;AACA;;AACA,sBACE;AAAA,eACIH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADV,EAGIE,SAAS,CAACG,GAAV,CAAc,UAACJ,IAAD;AAAA,0BAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA,KAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQT,K;UACQJ,W,EAEOA,W,EACEA,W;;;KAJjBI,K;AAuBT,eAAeA,KAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button, Card, Form, Input } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\n\r\nfunction Board() {\r\n  const { me } = useSelector((state) => state.user);\r\n  // const { logInDone } = useSelector((state) => state.user);\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  const { addPostDone } = useSelector((state) => state.post);\r\n\r\n  useCallback(() => {\r\n    if (addPostDone) {\r\n      Router.push('/Board');\r\n    }\r\n  }, [addPostDone]);\r\n  // useEffect(() => {\r\n  //   Router.push('/Board');\r\n  // }, [logInDone]);\r\n  return (\r\n    <div>\r\n      { me && <PostForm /> }\r\n      {/* { console.log(me) } */}\r\n      { mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}